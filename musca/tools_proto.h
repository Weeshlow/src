void notice(const char *file, ucell line, const char *func, const char *fmt, ...);
void bailout(const char *file, ucell line, const char *func, const char *fmt, ...);
void* allocate(ucell size);
void* reallocate(void *p, ucell size);
ucell strskip(char **str, str_cb_chr cb);
ucell strscan(char **str, str_cb_chr cb);
ucell strskipthese(char **str, const char *these);
ucell strscanthese(char **str, const char *these);
ucell strltrim(byte *addr);
ucell strrtrim(byte *addr);
ucell strtrim(byte *addr);
void str_create(autostr *s);
void str_require(autostr *s, ucell len);
void str_append(autostr *s, char *p, ucell len);
void str_drop(autostr *s, ucell len);
void str_delete(autostr *s);
ubyte regmatch(regex_t *reg, char *pattern, char *subject, ucell slots, regmatch_t *subs, ucell flags);
char* regsubstr(char *subject, regmatch_t *subs, int slot);
void blurt(const char *name, void *data);
ucell suck(FILE *src, byte *pad, ucell len, byte stop);
byte* slurp(const char *name, ucell *len);
void stack_push(stack *s, void *v);
void* stack_pop(stack *s);
void* stack_top(stack *s);
void* stack_shift(stack *s);
void stack_shove(stack *s, void *item);
void stack_del(stack *s, ucell index);
stack *stack_create();
void stack_destroy(stack *s);
